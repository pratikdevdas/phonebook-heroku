{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/backend.js","App.js","index.js"],"names":["Filter","prop","prop2","type","placeholder","value","onChange","PersonForm","prop1","prop3","prop4","prop5","onSubmit","Person","filterSearch","removePerson","map","note","name","number","onClick","id","Notification","message","className","baseUrl","request1","axios","get","console","log","then","response","data","newObject","post","delete","updatedPerson","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","setMessage","useEffect","herePerson","filter","toLowerCase","includes","event","target","preventDefault","checkPerson","find","person","cool","window","confirm","p","setTimeout","catch","error","newPerson","nameIsInvalid","length","toString","concat","event2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c77c7c46.chunk.js","sourcesContent":["import React from 'react'\nconst Filter = ({prop,prop2}) =>{return (<>\n    <input\n      type=\"text\"\n      placeholder=\"Search\"\n      value={prop}\n      onChange={prop2}\n    /></>)}\nexport default Filter","import React from 'react'\nconst PersonForm = ({prop1,prop2,prop3,prop4,prop5}) =>{return (<><form onSubmit={prop1} >\n    <div>\n      name: <input value={prop2} onChange={prop3}/>\n    </div>\n    <div>\n          number: <input value={prop4} onChange={prop5}/>\n        </div>\n        <div>\n          \n          <button type=\"submit\">add</button>\n        </div>\n     </form></>)}\n\nexport default PersonForm","import React from 'react'\n// import Note from './Note'\nconst Person = ({filterSearch,removePerson}) =>{\n \n    return (\n     \n      <div >\n      {filterSearch.map(note => \n      <div key ={note.id}>\n       {note.name} {note.number} <button onClick={() => removePerson(note.id, note.name)}>Delete</button>\n        </div>\n        )}</div>\n   \n \n       )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"msg\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request1 = axios.get(baseUrl)\n  console.log(request1)\n  return request1.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  // console.log(newObject)\n  const req = axios.post(baseUrl, newObject)\n  return req.then(response => response.data)\n}\n\nconst update = (id, updatedPerson) => {\n  const req2 = axios.put(`${baseUrl}/${id}`, updatedPerson)\n   return req2.then(response => response.data)\n};\n\n\nconst remove = id => { \n  return axios.delete(`${baseUrl}/${id}`);\n }\n\n\nexport default { \n  getAll: getAll, \n  create:create,\n  remove:remove,\n  update:update,\n \n}","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Person from \"./components/Person\";\nimport Notification from \"./components/Notification\"\nimport herePerson from \"./services/backend\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  \n  useEffect(() => {\n    console.log(\"effect\");\n   herePerson.getAll()\n    .then(response => {\n            setPersons(response);\n            console.log(response)\n    });\n  }, []);\n  // console.log(\"render\", persons.length, \"notes\");\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    //the event handler which that syncronizes the change made to input with component state\n  };\n  const handleNameChange = event => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event2 => {\n    // console.log(event2.target.value);\n    setNewNumber(event2.target.value);\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    \n    const checkPerson = persons.find(person => person.name === newName);\n    console.log(checkPerson);\n      \n    if (!checkPerson) {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n                }\n        const nameIsInvalid = newPerson.name.length > 4 && newPerson.number.toString().length > 8;\n        console.log(!nameIsInvalid)//true\n          if(!nameIsInvalid){\n            console.log(\"hi\");\n            setMessage(`shorter than allowed length`)\n            setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n      }\n       herePerson.create(newPerson)                 \n          .then(response=>{          \n         setPersons(persons.concat(response));\n         setNewName(\"\")\n         setNewNumber(\"\")\n         setMessage(`${newName} has been added`)})\n          .then(setTimeout(() => {\n          setMessage(null)\n        }, 5000)).catch((error)=>console.log(error))               \n        }\n        \n        else {\n          const cool = {name: checkPerson.name,\n            number: newNumber};\n            console.log(cool)\n          if (window.confirm(`Update ${checkPerson.name}'s number to \"${newNumber}\"`))\n          herePerson.update(checkPerson.id,cool)\n          .then(response=>{ console.log(response)         \n            setPersons(persons.map(p => p.name === response.name ? response : p))\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setMessage(\n              `${checkPerson.name} has been updated`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000) })\n              .catch(error=>{console.log('error')\n              setMessage(`Information of ${checkPerson.name} has been already removed. Please refresh`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)})\n                       \n          }\n          };\n\n         const removePerson = (id, name) => {\n        if (window.confirm(`delete ${name}?`)) {\n          herePerson.remove(id,name)\n          .then(() => {\n            setPersons(persons.filter(person => person.id !== id));\n            });\n        } \n      };\n  \n  const filterSearch = persons.filter(note => note.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter prop={searchTerm} prop2={handleSearch} />\n      <h3>Add a new</h3>\n      <PersonForm\n        prop1={addName}\n        prop2={newName}\n        prop3={handleNameChange}\n        prop4={newNumber}\n        prop5={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Person filterSearch={filterSearch} removePerson={removePerson}/>\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\"\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}